# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  node:
    runs-on: self-hosted
    environment: egregor
    strategy:
      matrix:
        node-version: [22.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: |
       touch .env
       echo DATABASE_NAME=egregor >> .env
       echo DATABASE_USER=proefex >> .env
       echo DATABASE_PASSWROD=proefex123456 >> .env
       echo DATABASE_HOST=localhost >> .env
       echo DATABASE_TYPE=postgres >> .env
       echo DATABASE_PORT=5432 >> .env
       echo JWT_SECRET_KEY=clavesecretajson >> .env
       echo MAIL_HOST=smtp.gmail.com
       echo MAIL_USER=kirudentadm@gmail.com
       echo MAIL_PASS=pcysjdjrxfsluwtf
       cat .env
    - run: |
       touch key_project.json
       echo { >> key_project.json
       echo \"auth_provider_x509_cert_url\":\"${{ secrets.AUTH_PROVIDER_X509_CERT_URL }}\", >> key_project.json
       echo \"auth_uri\":\"${{ secrets.AUTH_URI }}\", >> key_project.json
       echo \"client_email\":\"${{ secrets.CLIENT_EMAIL }}\", >> key_project.json
       echo \"client_id\":\"${{ secrets.CLIENT_ID }}\", >> key_project.json
       echo \"client_x509_cert_url\":\"${{ secrets.CLIENT_X509_CERT_URL }}\", >> key_project.json
       echo \"private_key\":\"${{ secrets.PRIVATE_KEY }}\", >> key_project.json
       echo \"private_key_id\":\"${{ secrets.PRIVATE_KEY_ID }}\", >> key_project.json
       echo \"project_id\":\"${{ secrets.PROJECT_ID }}\", >> key_project.json
       echo \"token_uri\":\"${{ secrets.TOKEN_URI }}\", >> key_project.json
       echo \"type\":\"${{ secrets.TYPE }}\", >> key_project.json
       echo \"universe_domain\":\"${{ secrets.UNIVERSE_DOMAIN }}\" >> key_project.json
       echo } >> key_project.json
       cat key_project.json

    - run: mkdir public
    - run: npm ci --legacy-peer-dep
    - run: npm run build --verbose
    - run: ls
    - run: ls
    #- run: npm install pm2@latest -g
    #- run: pm2 -V 
    #- run: pm2 list 
    #- run: pm2 start npm --name "egregor-api" -- start
    #- run: pm2 update
    #- run: pm2 save
    - run: pm2 restart egregor-api
 
    #- run: npm test
